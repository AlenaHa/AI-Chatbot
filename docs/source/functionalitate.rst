.. _functionalitate:

Functionalitate
===============

*          Aplicatia de chatbot medical a fost conceputa cu scopul de a oferi stdentilor de la medicina un ajutor pentru o invatare mai usoara. In acest context s-a realizat o interfata prietenoasa prin intermediul careia, utilizatorul sa poata cere definitii pentru diversi termeni medicali, cat si pentru evaluarea acestuia.
*           Pentru partea de backend ce implementeaza functionalitatea propriu zisa, am folosit limbajul Python si Frameworkul flask pentru a realiza comunicarea dintre server si interfata. Pentru interfata s-a folosit framework-ul Angular 2 care ne-a permis comunicarea facila intre client si server prin intermediul socketurilor web.
*           Web socket-ul a fost utilizat in special pentru a putea fi pastrat state-ul chat botului asta insemnand faptul ca chatbotul la un anumit moment in conversatie putand fie sa: intrebe si sa evalueze raspunsuri sau sa raspunda la cerera unei definitii sau la o conversatie uzuala.
*          Pentru a stocarea diverselor conversatii uzuale si a textelor de antrenament am folosit diverse tipuri de fisiere precum:aiml, fisier ce ajuta la parsarea unui raspuns, xml, pentru a salva textele dupa tokenizare, txt si docs pentru a tine suporturile de curs in format original pentru parsarea pe baza de expresii regulate si nu in ultimul rand o baza de date in care au fost stocate alte intrebari diverse si de asemenea utilizatorii logati pentru un istoric al conversatiilor.
*          Pentru raspunsul dat de chatbot utilizatorului cu privire la un termen medical, chatbotul utilizeaza atat regexuri cat si ontologii(sau mai bine spus tokenizari) create pe baza instrumentului oferit de universitate (NLP tool) care ajuta la parsarea textului, mai precis a intrebarii, la despartirea in parti de propozitie si cel mai important la gasirea subiectului despre care utilizatorul este interesar, dar nu in ultimul rand si pentru oferirea unui raspuns postrivit.
*          Pentru a oferi raspunsul cerut, am parsat de asemenea si suporturile de curs de la medicina pentru a desparti textul in fraze, propozitii si mai apoi parti de propozitie. Ne-au interesat cu precadere subiectele si predicatele pentru a identifica definita potrivita pentru intrebarea pusa.
*          Pentru generarea de intrebari au fost folosite regexuri aplicate peste suportul de curs. Raspunsul utilizatorului a fost verificat utilizant din nou api-ul pus la dispozitie de facultate pentru a tokeniza texte, iar pe baza acestui tool, am putut face asemanarea(analiza sau chiar inspectia) intre raspunsul dat de utilizator cat si cel corect(care va fi ulterior stocat in baza de date) prin compararea subiectului si a predicatului.

